{"version":3,"sources":["components/Button.js","components/Header.js","components/Modal.js","components/UserCard.js","components/CardList.js","components/Goto.js","components/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Button","btnClass","btnText","onClick","className","Header","fetchData","Modal","userData","src","picture","large","alt","name","first","last","gender","Date","dob","date","toLocaleString","phone","email","location","street","number","city","state","postcode","country","nat","UserCard","useState","showModal","setModalState","medium","CardList","users","loading","map","user","index","Goto","goToCtnClass","goToLabelClass","goToInputClass","goToBtnClass","goToBtnCtnClass","goToBtnText","handleChange","handleInput","htmlFor","type","id","placeholder","onChange","Pagination","usersPerPage","totalUsers","currentPage","paginate","prevPage","nextPage","pageNumbers","inputVal","setInVal","inputErr","setInputErr","i","Math","ceil","push","e","Number","target","value","length","App","setUsers","setLoading","showNav","setShowNav","setCurrentPage","a","fetch","res","json","results","console","log","indexOfLastUser","indexOfFirstUser","currentUsers","slice","pageNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAQeA,EARA,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACjC,OACI,wBAAQC,UAAWH,EAAUE,QAASA,EAAtC,SACKD,KCcEG,EAfA,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACd,OACI,yBAAQF,UAAU,SAAlB,UACI,oBAAIA,UAAU,gBAAd,mCACA,qBAAKA,UAAU,iBAAf,SACI,cAAC,EAAD,CACIH,SAAS,cACTC,QAAQ,YACRC,QAASG,UCgGdC,EAxGD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUL,EAAc,EAAdA,QACvB,OACI,qBAAKC,UAAU,cAAf,SACI,sBAAKA,UAAU,4BAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,qBACIK,IAAKD,EAASE,QAAQC,MACtBC,IAAI,GACJR,UAAU,gBAEd,oBAAGA,UAAU,eAAb,UACKI,EAASK,KAAKC,MACf,uBACCN,EAASK,KAAKE,aAI3B,sBAAKX,UAAU,qBAAf,UACI,mBAAGA,UAAU,sBAAb,0BAEA,sBAAKA,UAAU,wBAAf,UACI,8BACI,qBAAKA,UAAU,iBAAf,0BAGA,sBAAMA,UAAU,gBAAhB,SACKI,EAASK,KAAKC,WAGvB,8BACI,sBAAKV,UAAU,iBAAf,wBACgB,OAEhB,sBAAMA,UAAU,gBAAhB,SACKI,EAASK,KAAKE,UAGvB,8BACI,qBAAKX,UAAU,iBAAf,uBACA,sBAAMA,UAAU,gBAAhB,SACKI,EAASQ,YAGlB,8BACI,sBAAKZ,UAAU,iBAAf,4BACoB,OAEpB,sBAAMA,UAAU,gBAAhB,SACK,IAAIa,KACDT,EAASU,IAAIC,MACfC,sBAGV,8BACI,qBAAKhB,UAAU,iBAAf,wBACA,sBAAMA,UAAU,gBAAhB,SACKI,EAASa,WAGlB,8BACI,qBAAKjB,UAAU,iBAAf,sBACA,+BAAOI,EAASc,WAEpB,gCACI,qBAAKlB,UAAU,iBAAf,wBACA,sBAAMA,UAAU,gBAAhB,SACKI,EAASe,SAASC,OAAOC,OAAzB,KAEGjB,EAASe,SAASC,OAAOX,KAF5B,KAIGL,EAASe,SAASG,KAJrB,KAMGlB,EAASe,SAASI,MANrB,IAQGnB,EAASe,SAASK,SARrB,IAUGpB,EAASe,SAASM,aAG9B,8BACI,sBAAKzB,UAAU,iBAAf,0BACkB,OAElB,sBAAMA,UAAU,gBAAhB,SACKI,EAASsB,kBAM9B,qBAAK1B,UAAU,yBAAf,SACI,cAAC,EAAD,CACIH,SAAS,gBACTC,QAAQ,QACRC,QAASA,YCjDlB4B,EA7CE,SAAC,GAAkB,IAAhBvB,EAAe,EAAfA,SAChB,EAAmCwB,oBAAS,GAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,OACI,sBAAK9B,UAAU,iBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,qBACIK,IAAKD,EAASE,QAAQyB,OACtBvB,IAAI,GACJR,UAAU,kBAGlB,qBAAKA,UAAU,oBAAf,SACI,oBAAGA,UAAU,oBAAb,UACI,uBAAMA,UAAU,kBAAhB,UACKI,EAASK,KAAKC,MAAO,OAE1B,sBAAMV,UAAU,iBAAhB,SACKI,EAASK,KAAKE,YAI3B,qBAAKX,UAAU,oBAAf,SACI,cAAC,EAAD,CACIH,SAAS,eACTC,QAAQ,YACRC,QAAS,WACL+B,GAAc,WAM7BD,GACG,cAAC,EAAD,CACIzB,SAAUA,EACVL,QAAS,WACL+B,GAAc,UC1BvBE,EAdE,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAChB,OADqC,EAAdC,QAEZ,oBAAIlC,UAAU,cAAd,8BAIP,qBAAKA,UAAU,WAAf,SACKiC,EAAME,KAAI,SAACC,EAAMC,GACd,OAAO,cAAC,EAAD,CAAUjC,SAAUgC,GAAWC,SC0BvCC,EAlCF,SAAC,GASP,IARHC,EAQE,EARFA,aACAC,EAOE,EAPFA,eACAC,EAME,EANFA,eAEAC,GAIE,EALFC,gBAKE,EAJFD,cACAE,EAGE,EAHFA,YACAC,EAEE,EAFFA,aACAC,EACE,EADFA,YAEA,OACI,sBAAK9C,UAAWuC,EAAhB,UACI,wBAAOvC,UAAWwC,EAAgBO,QAAQ,UAA1C,kBACU,OAEV,uBACIC,KAAK,SACLvC,KAAK,UACLT,UAAWyC,EACXQ,GAAG,UACHC,YAAY,OACZC,SAAUN,IAEd,qBAAK7C,UAAU,kBAAf,SACI,cAAC,EAAD,CACIH,SAAU6C,EACV5C,QAAS8C,EACT7C,QAAS+C,UCyDdM,EAlFI,SAAC,GAYhB,IALG,IANHC,EAME,EANFA,aACAC,EAKE,EALFA,WACAC,EAIE,EAJFA,YACAC,EAGE,EAHFA,SACAC,EAEE,EAFFA,SACAC,EACE,EADFA,SAEMC,EAAc,GACpB,EAA6B/B,mBAAS,MAAtC,mBAAOgC,EAAP,KAAiBC,EAAjB,KACA,EAAgCjC,oBAAS,GAAzC,mBAAOkC,EAAP,KAAiBC,EAAjB,KAESC,EAAI,EAAGA,GAAKC,KAAKC,KAAKZ,EAAaD,GAAeW,IACvDL,EAAYQ,KAAKH,GAgBrB,OACI,sBAAKhE,UAAU,sBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,cAAC,EAAD,CACIH,SAAS,iBACTC,QAAQ,OACRC,QAAS0D,IAEb,cAAC,EAAD,CACI5D,SAAS,iBACTC,QAAQ,OACRC,QAAS2D,OAGjB,oBAAI1D,UAAU,qBAAd,SACK2D,EAAYxB,KAAI,SAACd,GACd,OACI,oBAEIrB,UACIuD,IAAgBlC,EACV,4CACA,8CAEVtB,QAAS,WACLyD,EAASnC,IARjB,SAWKA,GAVIA,QAgBrB,cAAC,EAAD,CACIkB,aAAa,eACbC,eAAe,cACfC,eAAe,cACfE,gBAAgB,YAChBD,aAAa,aACbE,YAAY,OACZC,aAtDS,SAACuB,GAClBP,EAASQ,OAAOD,EAAEE,OAAOC,SAsDjBzB,YAnDQ,WACZc,GAAYD,EAAYa,QAAUZ,GAAY,GAC9CJ,EAASI,GACTG,GAAY,IAEZA,GAAY,MAgDXD,EACG,qBAAK9D,UAAU,iBAAf,+BAEA,OCdDyE,MA7Df,WACI,MAA0B7C,mBAAS,IAAnC,mBAAOK,EAAP,KAAcyC,EAAd,KACA,EAA8B9C,oBAAS,GAAvC,mBAAOM,EAAP,KAAgByC,EAAhB,KACA,EAA8B/C,oBAAS,GAAvC,mBAAOgD,EAAP,KAAgBC,EAAhB,KACA,EAAsCjD,mBAAS,GAA/C,mBAAO2B,EAAP,KAAoBuB,EAApB,KACA,EAAuBlD,mBAAS,IAAzByB,EAAP,oBALW,4CAOX,8BAAA0B,EAAA,sEAGQJ,GAAW,GACXE,GAAW,GAJnB,SAM0BG,MAAM,0CANhC,cAMcC,EANd,gBAO0BA,EAAIC,OAP9B,OAOQ9E,EAPR,OAOsC+E,QAPtC,kDASQC,QAAQC,IAAR,MACAjF,EAAW,GAVnB,QAYIsE,EAAStE,GACTuE,GAAW,GACXE,GAAW,GAdf,2DAPW,sBAyBX,IAAMS,EAAkB/B,EAAcF,EAChCkC,EAAmBD,EAAkBjC,EACrCmC,EAAevD,EAAMwD,MAAMF,EAAkBD,GAcnD,OACI,qCACI,cAAC,EAAD,CAAQpF,UA3CL,6CA4CH,0BAASF,UAAU,cAAnB,UACK4E,GACG,cAAC,EAAD,CACIvB,aAAcA,EACdC,WAAYrB,EAAMuC,OAClBjB,YAAaA,EACbC,SArBH,SAACkC,GACdZ,EAAeY,IAqBCjC,SAnBH,WACbF,EAAc,GAAKuB,EAAevB,EAAc,IAmBhCG,SAjBH,WACbH,GAAe,GACXA,EAActB,EAAMuC,OAASnB,GAC7ByB,EAAevB,EAAc,MAiBzB,cAAC,EAAD,CAAUtB,MAAOuD,EAActD,QAASA,WChDzCyD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.5a17a83c.chunk.js","sourcesContent":["const Button = ({ btnClass, btnText, onClick }) => {\r\n    return (\r\n        <button className={btnClass} onClick={onClick}>\r\n            {btnText}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\n\r\nconst Header = ({ fetchData }) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 className=\"header__title\">Random User Generator</h1>\r\n            <div className=\"header__btnCtn\">\r\n                <Button\r\n                    btnClass=\"btnCtn__btn\"\r\n                    btnText=\"Get Users\"\r\n                    onClick={fetchData}\r\n                />\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import Button from \"./Button\";\r\n\r\nconst Modal = ({ userData, onClick }) => {\r\n    return (\r\n        <div className=\"modalWindow\">\r\n            <div className=\"modalWindow__modalContent\">\r\n                <div className=\"modalContent__info\">\r\n                    <div className=\"info__contentLeft\">\r\n                        <div className=\"contentLeft__avatar\">\r\n                            <img\r\n                                src={userData.picture.large}\r\n                                alt=\"\"\r\n                                className=\"avatar__img\"\r\n                            />\r\n                            <p className=\"avatar__name\">\r\n                                {userData.name.first}\r\n                                <br />\r\n                                {userData.name.last}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"info__contentRight\">\r\n                        <p className=\"contentRight__title\">User Details</p>\r\n\r\n                        <div className=\"contentRight__details\">\r\n                            <p>\r\n                                <div className=\"details__title\">\r\n                                    First Name :\r\n                                </div>\r\n                                <span className=\"details__desc\">\r\n                                    {userData.name.first}\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                <div className=\"details__title\">\r\n                                    Last Name :{\" \"}\r\n                                </div>\r\n                                <span className=\"details__desc\">\r\n                                    {userData.name.last}\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                <div className=\"details__title\">Gender : </div>\r\n                                <span className=\"details__desc\">\r\n                                    {userData.gender}\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                <div className=\"details__title\">\r\n                                    Date of Birth :{\" \"}\r\n                                </div>\r\n                                <span className=\"details__desc\">\r\n                                    {new Date(\r\n                                        userData.dob.date\r\n                                    ).toLocaleString()}\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                <div className=\"details__title\">Contact : </div>\r\n                                <span className=\"details__desc\">\r\n                                    {userData.phone}\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                <div className=\"details__title\">Email : </div>\r\n                                <span>{userData.email}</span>\r\n                            </p>\r\n                            <div>\r\n                                <div className=\"details__title\">Address : </div>\r\n                                <span className=\"details__desc\">\r\n                                    {userData.location.street.number +\r\n                                        `, ` +\r\n                                        userData.location.street.name +\r\n                                        `, ` +\r\n                                        userData.location.city +\r\n                                        `, ` +\r\n                                        userData.location.state +\r\n                                        `,` +\r\n                                        userData.location.postcode +\r\n                                        `,` +\r\n                                        userData.location.country}\r\n                                </span>\r\n                            </div>\r\n                            <p>\r\n                                <div className=\"details__title\">\r\n                                    Nationality :{\" \"}\r\n                                </div>\r\n                                <span className=\"details__desc\">\r\n                                    {userData.nat}\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modalContent__closeBtn\">\r\n                    <Button\r\n                        btnClass=\"closeBtn__btn\"\r\n                        btnText=\"close\"\r\n                        onClick={onClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState } from \"react\";\r\nimport Button from \"./Button\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst UserCard = ({ userData }) => {\r\n    const [showModal, setModalState] = useState(false);\r\n\r\n    return (\r\n        <div className=\"cardList__card\">\r\n            <div className=\"card__flex-ctn\">\r\n                <div className=\"flex-ctn__img\">\r\n                    <img\r\n                        src={userData.picture.medium}\r\n                        alt=\"\"\r\n                        className=\"img__avatar\"\r\n                    />\r\n                </div>\r\n                <div className=\"flex-ctn__nameBox\">\r\n                    <p className=\"nameBox__userName\">\r\n                        <span className=\"userName__first\">\r\n                            {userData.name.first}{\" \"}\r\n                        </span>\r\n                        <span className=\"userName__last\">\r\n                            {userData.name.last}\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n                <div className=\"flex-ctn__btn-ctn\">\r\n                    <Button\r\n                        btnClass=\"btn-ctn__btn\"\r\n                        btnText=\"view user\"\r\n                        onClick={() => {\r\n                            setModalState(true);\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {showModal && (\r\n                <Modal\r\n                    userData={userData}\r\n                    onClick={() => {\r\n                        setModalState(false);\r\n                    }}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nexport default UserCard;\r\n","import UserCard from \"./UserCard\";\r\n\r\nconst CardList = ({ users, loading }) => {\r\n    if (loading) {\r\n        return <h2 className=\"loadingSign\">users loading...</h2>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"cardList\">\r\n            {users.map((user, index) => {\r\n                return <UserCard userData={user} key={index} />;\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardList;\r\n","import Button from \"./Button\";\r\n\r\nconst Goto = ({\r\n    goToCtnClass,\r\n    goToLabelClass,\r\n    goToInputClass,\r\n    goToBtnCtnClass,\r\n    goToBtnClass,\r\n    goToBtnText,\r\n    handleChange,\r\n    handleInput,\r\n}) => {\r\n    return (\r\n        <div className={goToCtnClass}>\r\n            <label className={goToLabelClass} htmlFor=\"pageNum\">\r\n                Go to{\" \"}\r\n            </label>\r\n            <input\r\n                type=\"number\"\r\n                name=\"pageNum\"\r\n                className={goToInputClass}\r\n                id=\"pageNum\"\r\n                placeholder=\"page\"\r\n                onChange={handleChange}\r\n            />\r\n            <div className=\"goToBtnCtnClass\">\r\n                <Button\r\n                    btnClass={goToBtnClass}\r\n                    btnText={goToBtnText}\r\n                    onClick={handleInput}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Goto;\r\n","import { useState } from \"react\";\r\nimport Button from \"./Button\";\r\nimport Goto from \"./Goto\";\r\n\r\nconst Pagination = ({\r\n    usersPerPage,\r\n    totalUsers,\r\n    currentPage,\r\n    paginate,\r\n    prevPage,\r\n    nextPage,\r\n}) => {\r\n    const pageNumbers = [];\r\n    const [inputVal, setInVal] = useState(null);\r\n    const [inputErr, setInputErr] = useState(false);\r\n\r\n    for (let i = 1; i <= Math.ceil(totalUsers / usersPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setInVal(Number(e.target.value));\r\n    };\r\n\r\n    const handleInput = () => {\r\n        if (inputVal <= pageNumbers.length && inputVal >= 1) {\r\n            paginate(inputVal);\r\n            setInputErr(false);\r\n        } else {\r\n            setInputErr(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <nav className=\"cardSection__navBar\">\r\n            <div className=\"navBar__btnCtn\">\r\n                <Button\r\n                    btnClass=\"btnCtn__navBtn\"\r\n                    btnText=\"prev\"\r\n                    onClick={prevPage}\r\n                />\r\n                <Button\r\n                    btnClass=\"btnCtn__navBtn\"\r\n                    btnText=\"next\"\r\n                    onClick={nextPage}\r\n                />\r\n            </div>\r\n            <ul className=\"navBar__pagination\">\r\n                {pageNumbers.map((number) => {\r\n                    return (\r\n                        <li\r\n                            key={number}\r\n                            className={\r\n                                currentPage === number\r\n                                    ? \"pagination__item pagination__item--active\"\r\n                                    : \"pagination__item pagination__item--inactive\"\r\n                            }\r\n                            onClick={() => {\r\n                                paginate(number);\r\n                            }}\r\n                        >\r\n                            {number}\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n\r\n            <Goto\r\n                goToCtnClass=\"navBar__goto\"\r\n                goToLabelClass=\"goto__label\"\r\n                goToInputClass=\"goto__input\"\r\n                goToBtnCtnClass=\"goto__btn\"\r\n                goToBtnClass=\"btn__goBtn\"\r\n                goToBtnText=\"Go >\"\r\n                handleChange={handleChange}\r\n                handleInput={handleInput}\r\n            />\r\n            {inputErr ? (\r\n                <div className=\"navBar__errMsg\">Input is invalid!</div>\r\n            ) : (\r\n                \"\"\r\n            )}\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport CardList from \"./components/CardList\";\nimport Pagination from \"./components/Pagination\";\n\nfunction App() {\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [showNav, setShowNav] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [usersPerPage] = useState(10);\n\n    async function fetchData() {\n        let userData;\n        try {\n            setLoading(true);\n            setShowNav(false);\n\n            const res = await fetch(\"https://randomuser.me/api/?results=100\");\n            userData = (await res.json()).results;\n        } catch (err) {\n            console.log(err);\n            userData = [];\n        }\n        setUsers(userData);\n        setLoading(false);\n        setShowNav(true);\n    }\n\n    // get current users\n    const indexOfLastUser = currentPage * usersPerPage;\n    const indexOfFirstUser = indexOfLastUser - usersPerPage;\n    const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\n\n    const paginate = (pageNumber) => {\n        setCurrentPage(pageNumber);\n    };\n    const prevPage = () => {\n        currentPage > 1 && setCurrentPage(currentPage - 1);\n    };\n    const nextPage = () => {\n        currentPage >= 1 &&\n            currentPage < users.length / usersPerPage &&\n            setCurrentPage(currentPage + 1);\n    };\n\n    return (\n        <>\n            <Header fetchData={fetchData} />\n            <section className=\"cardSection\">\n                {showNav && (\n                    <Pagination\n                        usersPerPage={usersPerPage}\n                        totalUsers={users.length}\n                        currentPage={currentPage}\n                        paginate={paginate}\n                        prevPage={prevPage}\n                        nextPage={nextPage}\n                    />\n                )}\n                <CardList users={currentUsers} loading={loading} />\n            </section>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/normalize.css\";\nimport \"./scss/style.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}